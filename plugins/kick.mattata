--[[
    Copyright 2017 Diego Barreiro <diego@makeroid.io>
    This code is licensed under the MIT. See LICENSE for details.
]]

local kick = {}
local mattata = require('mattata')
local redis = dofile('libs/redis.lua')

function kick:init()
    kick.commands = mattata.commands(self.info.username):command('kick'):command('k').table
    kick.help = '/kick [user] - Kicks a user from the current chat. This command can only be used by moderators and administrators of a supergroup. Alias: /k'
end

function kick:on_message(message, configuration, language)
    if message.chat.type ~= 'supergroup' then
        mattata.send_reply(message, language['errors']['supergroup'])
        return false, 'The chat is not a supergroup!'
    elseif not mattata.is_group_admin(message.chat.id, message.from.id) then
        mattata.send_reply(message, language['errors']['admin'])
        return false, 'That user is not an admin/mod in this chat!'
    end
    local reason = false
    local user = false
    local input = mattata.input(message)
    -- Check the message object for any users this command
    -- is intended to be executed on.
    if message.reply then
        user = message.reply.from.id
        reason = input
    elseif input and input:match(' ') then
        user, reason = input:match('^(.-) (.-)$')
    elseif input then
        user = input
    end
    if not user then
        local success = mattata.send_force_reply(message, language['kick']['1'])
        if success then
            redis:set('action:' .. message.chat.id .. ':' .. success.result.message_id, '/kick')
        end
        return
    end
    if reason and type(reason) == 'string' and reason:match('^[Ff][Oo][Rr] ') then
        reason = reason:match('^[Ff][Oo][Rr] (.-)$')
    end
    if tonumber(user) == nil and not user:match('^%@') then
        user = '@' .. user
    end
    local success = mattata.get_user(user)
    if not success then
        user_object = mattata.get_chat(user)
    else
        user_object = mattata.get_chat(success.result.id)
    end
    if not user_object then
        mattata.send_reply(message, language['errors']['unknown'])
        return false, 'No user object was found!'
    elseif user_object.result.id == self.info.id then
        return false, 'The user given was the bot!'
    end
    user_object = user_object.result
    local status, error_message = mattata.get_chat_member(message.chat.id, user_object.id)
    if not status then
        mattata.send_reply(message, language['errors']['generic'])
        return false, error_message
    elseif mattata.is_group_admin(message.chat.id, user_object.id) or status.result.status == 'creator' or status.result.status == 'administrator' then
    -- We won't try and kick moderators and administrators.
        mattata.send_reply(message, language['kick']['2'])
        return false, 'That user is an admin/mod in this chat!'
    elseif status.result.status == 'left' or status.result.status == 'kicked' then -- Check if the user is in the group or not.
        local output = status.result.status == 'left' and language['kick']['3'] or language['kick']['4']
        mattata.send_reply(message, output)
        return false, output
    end
    local success = mattata.kick_chat_member(message.chat.id, user_object.id) -- Attempt to kick the user from the group.
    if not success then -- Since we've ruled everything else out, it's safe to say if it wasn't a success
    -- then the bot isn't an administrator in the group.
        return mattata.send_reply(message, language['kick']['5'])
    end
    redis:hincrby('chat:' .. message.chat.id .. ':' .. user_object.id, 'kicks', 1)
    if mattata.get_setting(message.chat.id, 'log administrative actions') then
        mattata.send_message(
            mattata.get_log_chat(message.chat.id),
            string.format(
                '#action #kick #admin_'..tostring(message.from.id)..' #user_'..tostring(user_object.id)..' #group_'..tostring(message.chat.id):gsub("%-", "")..'\n\n<pre>%s%s [%s] has kicked %s%s [%s] from %s%s [%s]%s.</pre>',
                message.from.username and '@' or '',
                message.from.username or mattata.escape_html(message.from.first_name),
                message.from.id,
                user_object.username and '@' or '',
                user_object.username or mattata.escape_html(user_object.first_name),
                user_object.id,
                message.chat.username and '@' or '',
                message.chat.username or mattata.escape_html(message.chat.title),
                message.chat.id,
                reason and ', for ' .. reason or ''
            ),
            'html'
        )
    end
    if message.reply and mattata.get_setting(message.chat.id, 'delete reply on action') then
        mattata.delete_message(message.chat.id, message.reply.message_id)
    end
    return mattata.send_message(
        message.chat.id,
        string.format(
            '<pre>%s%s has kicked %s%s%s.</pre>',
            message.from.username and '@' or '',
            message.from.username or mattata.escape_html(message.from.first_name),
            user_object.username and '@' or '',
            user_object.username or mattata.escape_html(user_object.first_name),
            reason and ', for ' .. reason or ''
        ),
        'html'
    )
end

return kick
