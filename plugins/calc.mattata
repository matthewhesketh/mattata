--[[
    Based on a plugin by topkecleon.
    Copyright 2017 Diego Barreiro <diego@makeroid.io>
    This code is licensed under the MIT. See LICENSE for details.
]]

local calc = {}
local mattata = require('mattata')
local http = require('socket.http')
local url = require('socket.url')
local json = require('dkjson')

function calc:init()
    calc.commands = mattata.commands(self.info.username):command('calc').table
    calc.help = '/calc <expression> - Solves the given mathematical expression using mathjs.org.'
end

function calc:on_inline_query(inline_query, configuration, language)
    local input = mattata.input(inline_query.query)
    if not input
    then
        return
    end
    input = input
    :gsub('รท', '/')
    :gsub('x', '*')
    :gsub('plus', '+')
    :gsub('divided by', '/')
    :gsub('take away', '-')
    :gsub('times by', '*')
    :gsub('multiplied by', '*')
    :gsub('pi', math.pi)
    :gsub('times', '*')
    :gsub('to the power of', '^')
    :gsub('raised to', '^')
    :gsub('minus', '-')
    local str, res = http.request('https://api.mathjs.org/v1/?expr=' .. url.escape(input))
    if res ~= 200
    then
        return
    end
    return mattata.answer_inline_query(
        json.encode(
            {
                {
                    ['type'] = 'article',
                    ['id'] = '1',
                    ['title'] = str,
                    ['description'] = language['calc']['1'],
                    ['input_message_content'] = {
                        ['message_text'] = str
                    }
                }
            }
        )
    )
end

function calc:on_message(message, configuration)
    local input = mattata.input(message.text)
    if not input
    then
        return mattata.send_reply(
            message,
            calc.help
        )
    end
    input = input
    :gsub('รท', '/')
    :gsub('x', '*')
    :gsub('plus', '+')
    :gsub('divided by', '/')
    :gsub('take away', '-')
    :gsub('times by', '*')
    :gsub('multiplied by', '*')
    :gsub('pi', math.pi)
    :gsub('times', '*')
    :gsub('to the power of', '^')
    :gsub('raised to', '^')
    :gsub('minus', '-')
    local str, res = http.request('https://api.mathjs.org/v1/?expr=' .. url.escape(input))
    if res ~= 200
    then
        return mattata.send_reply(
            message,
            configuration.errors.connection
        )
    end
    return mattata.send_message(
        message.chat.id,
        str
    )
end

return calc
