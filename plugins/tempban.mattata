--[[
    Copyright 2017 Diego Barreiro <diego@makeroid.io>
    This code is licensed under the MIT. See LICENSE for details.
]]

local tempban = {}
local mattata = require('mattata')
local json = require('dkjson')
local redis = dofile('libs/redis.lua')

function tempban:init()
    tempban.commands = mattata.commands(self.info.username):command('tempban').table
    tempban.help = '/tempban [user]  - Temporarily ban a user from the chat. The user may be specified by username, ID or by replying to one of their messages.'
end

function tempban.get_keyboard(chat_id, user_id, value, unit)
    return mattata.inline_keyboard()
    :row(
        mattata.row()
        :callback_data_button(
            '⏪',
            'tempban:' .. chat_id .. ':' .. user_id .. ':' .. value .. ':' .. unit .. ':decrease2_value'
        )
        :callback_data_button(
            '◀️',
            'tempban:' .. chat_id .. ':' .. user_id .. ':' .. value .. ':' .. unit .. ':decrease_value'
        )
        :callback_data_button(
            value,
            'tempban:' .. chat_id .. ':' .. user_id .. ':' .. value .. ':' .. unit .. ':nil'
        )
        :callback_data_button(
            '▶️',
            'tempban:' .. chat_id .. ':' .. user_id .. ':' .. value .. ':' .. unit .. ':increase_value'
        )
        :callback_data_button(
            '⏩',
            'tempban:' .. chat_id .. ':' .. user_id .. ':' .. value .. ':' .. unit .. ':increase2_value'
        )
    )
    :row(
        mattata.row()
        :callback_data_button(
            '◀️',
            'tempban:' .. chat_id .. ':' .. user_id .. ':' .. value .. ':' .. unit .. ':decrease_unit'
        )
        :callback_data_button(
            unit,
            'tempban:' .. chat_id .. ':' .. user_id .. ':' .. value .. ':' .. unit .. ':nil'
        )
        :callback_data_button(
            '▶️',
            'tempban:' .. chat_id .. ':' .. user_id .. ':' .. value .. ':' .. unit .. ':increase_unit'
        )
    )
    :row(
        mattata.row()
        :callback_data_button(
            'Accept ✅',
            'tempban:' .. chat_id .. ':' .. user_id .. ':' .. value .. ':' .. unit .. ':accept'
        )
    )
end

function tempban.in_list(tbl, item)
    for key, value in pairs(tbl) do
        if value == item then return key end
    end
    return false
end

function tempban:on_callback_query(callback_query, message, configuration, language)
    local units = {'seconds', 'minutes', 'hours', 'days', 'weeks', 'months', 'years'}
    if not callback_query.data:match('^%-?%d+:%d+:%d+:%a*:.-$')
    then
        return mattata.answer_callback_query(callback_query.id)
    end
    local chat_id, user_id, value, unit, action = callback_query.data:match('^(%-?%d+):(%d+):(%d+):(%a*):(.-)$')
    if not mattata.is_group_admin(
        chat_id,
        callback_query.from.id
    )
    then
        return mattata.answer_callback_query(
            callback_query.id,
            'You\'re not an administrator in this chat!',
            true
        )
    elseif not mattata.is_group_admin(
        chat_id,
        self.info.id,
        true
    )
    then
        return mattata.answer_callback_query(
            callback_query.id,
            'I need to have administrative permissions to temp-ban this user!',
            true
        )
    elseif mattata.is_group_admin(
        chat_id,
        user_id
    )
    then
        return mattata.answer_callback_query(
            callback_query.id,
            'That user appears to have been granted administrative permissions since the keyboard was sent!',
            true
        )
    end
    if action == "accept" then
        local duration = 0
        if unit == "seconds" then
            duration = tonumber(value)*1
        elseif unit == "minutes" then
            duration = tonumber(value)*60
        elseif unit == "hours" then
            duration = tonumber(value)*3600
        elseif unit == "days" then
            duration = tonumber(value)*86400
        elseif unit == "weeks" then
            duration = tonumber(value)*604800
        elseif unit == "months" then
            duration = tonumber(value)*2628000
        elseif unit == "years" then
            duration = tonumber(value)*31540000
        end
        local success = mattata.ban_chat_member(
            chat_id,
            user_id,
            os.time() + tonumber(duration)
        )
        local user = mattata.get_user(user_id)
        user = user.result
        if not success
        then
            return mattata.edit_message_text(
                message.chat.id,
                message.message_id,
                'I could not ban <b>' .. mattata.escape_html(user.first_name) .. '</b>!',
                'html'
            )
        end
        return mattata.edit_message_text(
            message.chat.id,
            message.message_id,
            'I have successfully temp-banned <b>' .. mattata.escape_html(user.first_name) .. '</b> for ' .. value .. ' ' .. unit .. '!',
            'html'
        )
    elseif action == "increase_unit" then
        if unit ~= "years" then
            mattata.edit_message_reply_markup(
                message.chat.id,
                message.message_id,
                nil,
                tempban.get_keyboard(message.chat.id, user_id, value, units[tempban.in_list(units, unit)+1])
            )
        end
    elseif action == "decrease_unit" then
        if unit ~= "seconds" then
            mattata.edit_message_reply_markup(
                message.chat.id,
                message.message_id,
                nil,
                tempban.get_keyboard(message.chat.id, user_id, value, units[tempban.in_list(units, unit)-1])
            )
        end
    elseif action == "increase2_value" then
        mattata.edit_message_reply_markup(
            message.chat.id,
            message.message_id,
            nil,
            tempban.get_keyboard(message.chat.id, user_id, math.floor(value+10), unit)
        )
    elseif action == "increase_value" then
        mattata.edit_message_reply_markup(
            message.chat.id,
            message.message_id,
            nil,
            tempban.get_keyboard(message.chat.id, user_id, math.floor(value+1), unit)
        )
    elseif action == "decrease_value" then
          if tonumber(value) >= 2 then
              mattata.edit_message_reply_markup(
                  message.chat.id,
                  message.message_id,
                  nil,
                  tempban.get_keyboard(message.chat.id, user_id, math.floor(value-1), unit)
              )
          end
    elseif action == "decrease2_value" then
      if tonumber(value) >= 11 then
          mattata.edit_message_reply_markup(
              message.chat.id,
              message.message_id,
              nil,
              tempban.get_keyboard(message.chat.id, user_id, math.floor(value-10), unit)
          )
      end
    end
end

function tempban:on_message(message, configuration, language)
    if message.chat.type ~= 'supergroup'
    then
        return mattata.send_reply(
            message,
            language['errors']['supergroup']
        )
    elseif not mattata.is_group_admin(
        message.chat.id,
        message.from.id
    )
    then
        return mattata.send_reply(
            message,
            language['errors']['admin']
        )
    elseif not mattata.is_group_admin(
        message.chat.id,
        self.info.id,
        true
    )
    then
        return mattata.send_reply(
            message,
            'I need to have administrative permissions to temp-ban this user!'
        )
    end
    local input = mattata.input(message.text)
    local user = input
    if not input
    or message.reply
    then
        if not message.reply
        then
            return mattata.send_reply(
                message,
                tempban.help
            )
        end
        user = message.reply.from
    else
        if tonumber(user) == nil
        and not user:match('^@')
        then
            user = '@' .. user
        end
        user = mattata.get_user(user)
        if user
        then
            user = user.result
        end
    end
    if type(user) ~= 'table'
    then
        return mattata.send_reply(
            message,
            'Sorry, but I don\'t recognise this user! If you\'d like to teach me who they are, please forward a message from them to me.'
        )
    end
    user = mattata.get_chat_member(
        message.chat.id,
        user.id
    )
    if not user
    or type(user) ~= 'table'
    or not user.result
    or not user.result.user
    or not user.result.status
    or user.result.status == 'kicked'
    or user.result.status == 'left'
    then
        return mattata.send_reply(
            message,
            'Are you sure you specified the correct user? They do not appear to be a member of this chat.'
        )
    end
    user = user.result.user
    if mattata.is_group_admin(
        message.chat.id,
        user.id
    )
    then
        return mattata.send_reply(
            message,
            'This user appears to be an administrator of this chat. I\'m sorry, but I cannot temp-ban administrators!'
        )
    end
    return mattata.send_message(
        message.chat.id,
        'Please select the duration you would like to temp-ban <b>' .. mattata.escape_html(user.first_name) .. '</b> for:',
        'html',
        true,
        false,
        nil,
        tempban.get_keyboard(
            message.chat.id,
            user.id,
            5,
            'minutes'
        )
    )
end

return tempban
