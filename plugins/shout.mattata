--[[
    Based on a plugin by topkecleon.
    Copyright 2017 Diego Barreiro <diego@makeroid.io>
    This code is licensed under the MIT. See LICENSE for details.
]]

local shout = {}
local mattata = require('mattata')
local http = require('socket.http')
local url = require('socket.url')
local json = require('dkjson')

local utf8 = utf8 or require('lua-utf8')
local utf = {}
utf.char = {utf_8 = '[%z\1-\127\194-\244][\128-\191]'}

function shout:init()
    shout.commands = mattata.commands(self.info.username):command('shout').table
    shout.help = '/shout <text> - Shout the text!'
end

function shout.process(input)
    input = input:gsub('^%s*(.-)%s*$', '%1')
    input = input:upper()
    local output = ''
    local inc = 0
    local ilen = 0
    local utf8_char = '('..utf.char.utf_8..'*)'
    for match in input:gmatch(utf8_char) do
      if ilen < 20 then
        ilen = ilen + 1
        output = output .. match .. ' '
      end
    end
    ilen = 0
    output = output .. '\n'
    for match in input:sub(2):gmatch(utf8_char) do
      if ilen < 19 then
        local spacing = ''
        for _ = 1, inc do
          spacing = spacing .. '  '
        end
        inc = inc + 1
        ilen = ilen + 1
        output = output .. match .. ' ' .. spacing .. match .. '\n'
      end
    end
    message = '```\n' .. output:gsub('^%s*(.-)%s*$', '%1') .. '\n```'
    return message
end

function shout:on_inline_query(inline_query, configuration, language)
    local input = mattata.input(inline_query.query)
    if not input
    then
        return
    end
    return mattata.answer_inline_query(
        json.encode(
            {
                {
                    ['type'] = 'article',
                    ['id'] = '1',
                    ['title'] = "shout",
                    ['description'] = "shout",
                    ['input_message_content'] = {
                        ['message_text'] = shout.process(input)
                    }
                }
            }
        )
    )
end

function shout:on_message(message, configuration)
    local input = mattata.input(message.text)
    if not input
    then
        return mattata.send_reply(
            message,
            shout.help
        )
    end
    return mattata.send_reply(
        message,
        shout.process(input),
        'markdown'
    )
end

return shout
