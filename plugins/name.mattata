--[[
    Copyright 2017 Diego Barreiro <diego@makeroid.io>
    This code is licensed under the MIT. See LICENSE for details.
]]

local name = {}
local mattata = require('mattata')
local redis = dofile('libs/redis.lua')

function name:init()
    name.commands = mattata.commands(self.info.username):command('name').table
    name.help = '/name <text> - Change the name that the bot\'s AI responds to.'
end

function name.set_name(chat_id, input)
    redis:set(
        string.format(
            'chat:%s:name',
            chat_id
        ),
        input
    )
end

function name.get_name(chat_id)
    return redis:get(
        string.format(
            'chat:%s:name',
            chat_id
        )
    )
    or 'BarrePolice'
end

function name:on_message(message, configuration, language)
    local input = mattata.input(message.text)
    if not input
    then
        return mattata.send_reply(
            message,
            string.format(
                language['name']['1'],
                name.get_name(message.chat.id)
            )
        )
    end
    if message.chat.type ~= 'private'
    and not mattata.is_group_admin(
        message.chat.id,
        message.from.id
    )
    then
        return mattata.send_reply(
            message,
            language['errors']['admin']
        )
    end
    if input:len() < 2
    or input:len() > 32
    then
        return mattata.send_reply(
            message,
            language['name']['2']
        )
    elseif input
    :gsub('%s', '')
    :match('%W')
    then
        return mattata.send_reply(
            message,
            language['name']['3']
        )
    end
    local old_name = name.get_name(message.chat.id)
    name.set_name(
        message.chat.id,
        input
    )
    return mattata.send_reply(
        message,
        string.format(
            language['name']['4'],
            input,
            old_name
        )
    )
end

return name
